{"version":3,"file":"static/js/651.43ccd62f.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '#redux/contacts/operation';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\nfunction getRandomHexColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const editContact = id => {\n    navigate(`${id}/edit`, { state: { from: location } });\n  };\n\n  const firstLetter = name.slice(0, 1).toUpperCase();\n\n  return (\n    <>\n      <ListItem\n        key={id}\n        secondaryAction={\n          <>\n            <Button\n              id={id}\n              variant=\"outlined\"\n              disableElevation\n              onClick={() => editContact(id)}\n              startIcon={<EditIcon />}\n            >\n              Edit\n            </Button>{' '}\n            <Button\n              id={id}\n              variant=\"contained\"\n              disableElevation\n              onClick={() => dispatch(deleteContact(id))}\n              startIcon={<DeleteIcon />}\n            >\n              Delete\n            </Button>\n          </>\n        }\n        disablePadding\n      >\n        <ListItemButton>\n          <ListItemAvatar>\n            <Avatar\n              sx={{\n                bgcolor: getRandomHexColor(),\n              }}\n            >\n              {firstLetter}\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText id={id} primary={`${name}: ${number}`} />\n        </ListItemButton>\n      </ListItem>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from '#components/ContactListItem/ContactListItem';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filterValue = useSelector(state => state.filter.status);\n  const error = useSelector(state => state.contacts.error);\n\n  const filterContact = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue?.toLowerCase())\n  );\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n      }}\n    >\n      <Typography\n        variant=\"h4\"\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          fontSize: 'h4.fontSize',\n          color: '#53a7eb',\n        }}\n      >\n        {`Contacts List`}\n      </Typography>\n      {filterContact?.length > 0 ? (\n        <List sx={{ width: '120ch' }}>\n          {filterContact?.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </List>\n      ) : (\n        (error && <p>Error: {error}</p>) || (\n          <Typography\n            variant=\"p\"\n            sx={{\n              textAlign: 'center',\n              fontWeight: 'bold',\n              fontSize: 'h5.fontSize',\n              color: '#ff4400',\n            }}\n          >\n            {`No contacts in phoneBook`}\n          </Typography>\n        )\n      )}\n    </Box>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '#redux/contacts/operation';\nimport Button from '@mui/material/Button';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport PhoneEnabledIcon from '@mui/icons-material/PhoneEnabled';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const id = nanoid();\n    let exist = false;\n\n    contacts.forEach(contact => {\n      if (contact.name.toLowerCase().trim() === name.toLowerCase().trim()) {\n        alert(`${name} is already in contacts`);\n        exist = true;\n      }\n    });\n\n    if (!exist) {\n      dispatch(addContact({ id, name, number }));\n    }\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          padding: '20px',\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          sx={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n            fontSize: 'h4.fontSize',\n            color: '#53a7eb',\n          }}\n        >\n          {`Phonebook`}\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            '& .MuiTextField-root': { m: 2, width: '60ch' },\n            display: 'flex',\n            flexDirection: 'column',\n            width: 'auto',\n            justifyContent: 'center',\n            alignItems: 'center',\n            ml: 'auto', //margin-left\n            mr: 'auto', //margin-right\n          }}\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            required\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <PersonOutlineIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <TextField\n            required\n            label=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <PhoneEnabledIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            startIcon={<PersonAddIcon />}\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/slice/filterSlice';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter.status);\n  const onFilterChange = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n      }}\n    >\n      <Typography\n        variant=\"h4\"\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          fontSize: 'h4.fontSize',\n          color: '#53a7eb',\n        }}\n      >\n        {`Find contacts by name`}\n      </Typography>\n      <Paper\n        component=\"form\"\n        sx={{\n          p: '2px 4px',\n          display: 'flex',\n          alignItems: 'center',\n          width: 400,\n          boxShadow:\n            '0px 2px 1px -1px rgb(25 118 210), 0px 1px 1px 0px rgb(25 118 210), 0px 1px 3px 0px rgb(25 118 210)',\n        }}\n      >\n        <InputBase\n          sx={{ ml: 1, flex: 1 }}\n          placeholder=\"Find contacts by name\"\n          inputProps={{ 'aria-label': 'find contacts by name' }}\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          title=\"Enter name\"\n          onChange={onFilterChange}\n        />\n        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from '#redux/contacts/operation';\nimport { ContactList } from '#components/ContactList/ContactList';\nimport { ContactForm } from '#components/ContactForm/ContactForm';\nimport { Filter } from '#components/Filter/Filter';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\n// At the moment, React.lazy() does not support using named\n// exports for React components. If you wish to use named exports\n// containing React components, you need to reexport them as\n// default exports in separate intermediate modules.\n\nexport { Contacts as default };\n"],"names":["getRandomHexColor","color","i","Math","floor","random","ContactListItem","_ref","id","name","number","dispatch","useDispatch","navigate","useNavigate","location","useLocation","firstLetter","slice","toUpperCase","_jsx","_Fragment","children","ListItem","secondaryAction","_jsxs","Button","variant","disableElevation","onClick","concat","state","from","editContact","startIcon","EditIcon","deleteContact","DeleteIcon","disablePadding","ListItemButton","ListItemAvatar","Avatar","sx","bgcolor","ListItemText","primary","ContactList","contacts","useSelector","items","filterValue","filter","status","error","filterContact","contact","toLowerCase","includes","Box","display","flexDirection","alignItems","padding","Typography","textAlign","fontWeight","fontSize","length","List","width","map","ContactForm","component","m","justifyContent","ml","mr","noValidate","onSubmit","e","preventDefault","form","currentTarget","elements","value","nanoid","exist","forEach","trim","alert","addContact","target","reset","TextField","required","label","type","pattern","InputProps","startAdornment","InputAdornment","position","PersonOutlineIcon","PhoneEnabledIcon","size","PersonAddIcon","Filter","Paper","p","boxShadow","InputBase","flex","placeholder","inputProps","title","onChange","IconButton","SearchIcon","Contacts","useEffect","getContacts"],"sourceRoot":""}